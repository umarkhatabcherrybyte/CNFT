import Head from "next/head";
import { CardanoWallet, MeshBadge, useWallet } from "@martifylabs/mesh-react";
import { createTransaction, signTransaction } from "../backend";
import { create } from 'ipfs-http-client'
import { useState } from "react";

export default function Home() {

  const { wallet, connected } = useWallet();
  const [txHash, setTxHash] = useState(null);
  const [loading, setLoading] = useState(false);
  const [ThumbnailUrl, setThumbnailUrl] = useState(null);
  const [thumbnail, setThumbnail] = useState(null);

  async function startMining(e) {
    e.preventDefault()
    setLoading(true);
    try {
      const recipientAddress = await wallet.getChangeAddress();
      const utxos = await wallet.getUtxos();

      const projectId = "2IAoACw6jUsCjy7i38UO6tPzYtX";
      const projectSecret = "136393a5b7f4e47a9e153a88eb636003";
      const auth = `Basic ${Buffer.from(`${projectId}:${projectSecret}`).toString(
        "base64"
      )}`;

      console.log(auth,'witwref')

      const client = create({
        host: "ipfs.infura.io",
        port: 5001,
        protocol: "https",
        headers: {
          authorization: auth,
        },
      });

      console.log(client,'cldasdas')

      const image_hash = await client.add(thumbnail);

      console.log(image_hash.path,'dasdasd')
      if (image_hash) {
        const { assetName, maskedTx, originalMetadata } = await createTransaction(
          recipientAddress,
          utxos,
          image_hash.path
        );

        const signedTx = await wallet.signTx(maskedTx, true);

        const { txHash } = await signTransaction(
          assetName,
          signedTx,
          originalMetadata
        );
        setTxHash(txHash);
      }


    } catch (error) {
      console.error(error);
    }
    setLoading(false);
  }

  const uploadThumbail = (e) => {
    let file = e.target.files[0]
    console.log(file,'lolo')
    if(file){
      setThumbnail(file);

    }
    // if (input.files && input.files[0]) {
    //   const files = input.files[0];
    //   const _url = URL.createObjectURL(files);
    //   setThumbnailUrl(_url);
    // }
  };

  return (
    <div className="container">
      <Head>
        <title>Mesh App on Cardano</title>
        <meta name="description" content="A Cardano dApp powered my Mesh" />
        <link
          rel="icon"
          href="https://mesh.martify.io/favicon/favicon-32x32.png"
        />
        <link
          href="https://mesh.martify.io/css/template.css"
          rel="stylesheet"
          key="mesh-demo"
        />
      </Head>

      <main className="main">
        <h1 className="title">
          <a href="https://mesh.martify.io/">Minting</a>
        </h1>

        <div className="demo">
          {connected ? (
            <button
              type="button"
              onClick={(e) => startMining(e)}
              disabled={loading}
            >
              {loading ? "Creating transaction..." : "Mint Mesh Token"}
            </button>
          ) : (
            <CardanoWallet />
          )}
          <input
            accept="image/*"
            id="contained-button-file"
            className="thumbnail"
            type="file"
            onChange={uploadThumbail}
          />
          {txHash && (
            <div>
              <p>Successful, transaction hash:</p>
              <code>{txHash}</code>
            </div>
          )}
        </div>
      </main>
    </div>
  );
}
